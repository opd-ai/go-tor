name: Build

on:
  push:
    branches: [main]

permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
          - goos: windows
            goarch: amd64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22.x'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        VERSION=$(git describe --tags --always --dirty 2>/dev/null || echo "dev")
        BUILD_TIME=$(date -u '+%Y-%m-%d_%H:%M:%S')
        BINARY_NAME=tor-client-${{ matrix.goos }}-${{ matrix.goarch }}
        if [ "${{ matrix.goos }}" = "windows" ]; then
          BINARY_NAME="${BINARY_NAME}.exe"
        fi
        
        echo "Building ${BINARY_NAME} version ${VERSION}"
        go build -ldflags "-X main.version=${VERSION} -X main.buildTime=${BUILD_TIME}" \
          -o bin/${BINARY_NAME} ./cmd/tor-client
        
        ls -lh bin/

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: tor-client-${{ matrix.goos }}-${{ matrix.goarch }}
        path: bin/tor-client-*
        retention-days: 7
